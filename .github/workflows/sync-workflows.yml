name: Sync Workflows

on:
  push:
    paths:
      - ".github/workflows/**"
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Get repository list
        id: repo-list
        run: |
          # Get list of all org repos and format it as a JSON array
          repos=$(gh api orgs/Vector-Costa-Rica/repos --paginate | jq -r '.[].full_name' | jq -R -s -c 'split("\n")[:-1]')
          echo "repos=${repos}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: Sync workflows to repositories
        run: |
          # Parse the JSON array of repos
          echo '${{ steps.repo-list.outputs.repos }}' | jq -r '.[]' | while read repo; do
            if [ "$repo" != "Vector-Costa-Rica/.github" ]; then
              echo "Syncing to $repo"

              # Clone the target repository
              git clone https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com/$repo.git temp_repo
              cd temp_repo

              # Create or ensure .github/workflows directory exists
              mkdir -p .github/workflows

              # Copy workflow files
              cp -f ../.github/workflows/* .github/workflows/

              # Check if there are changes
              if git status --porcelain | grep .; then
                git config --local user.email "github-actions[bot]@users.noreply.github.com"
                git config --local user.name "github-actions[bot]"
                git add .github/workflows/
                git commit -m "Sync workflows from .github repository"
                git push
              fi

              cd ..
              rm -rf temp_repo
            fi
          done
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}

name: Create Branch for New Issues

on:
  issues:
    types: [opened]
  workflow_dispatch:
    inputs:
      process_existing:
        description: "Process existing issues"
        required: true
        default: "false"
        type: boolean

jobs:
  create_branch:
    runs-on: ubuntu-latest

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Create branch for new issue
        if: github.event_name == 'issues'
        shell: bash
        run: |
          # Store variables safely
          ISSUE_NUM="${{ github.event.issue.number }}"
          TITLE="${{ github.event.issue.title }}"

          # Sanitize the title
          CLEAN_TITLE=$(echo "$TITLE" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]' | tr -s '-')
          BRANCH_NAME="issue-${ISSUE_NUM}-${CLEAN_TITLE}"

          echo "Creating branch: $BRANCH_NAME"

          # Check if branch exists
          if ! git ls-remote --exit-code --heads origin "$BRANCH_NAME"; then
            # Configure git
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'

            # Create and push branch
            git checkout -b "$BRANCH_NAME"
            git push origin "$BRANCH_NAME"

            # Comment on issue
            gh issue comment "$ISSUE_NUM" --body "Branch \`$BRANCH_NAME\` created!"
          else
            echo "Branch $BRANCH_NAME already exists"
          fi
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
